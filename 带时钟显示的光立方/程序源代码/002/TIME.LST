C51 COMPILER V9.00   TIME                                                                  08/19/2014 19:44:31 PAGE 1   


C51 COMPILER V9.00, COMPILATION OF MODULE TIME
OBJECT MODULE PLACED IN TIME.OBJ
COMPILER INVOKED BY: D:\Program Files\keil\C51\BIN\C51.EXE TIME.C BROWSE DEBUG OBJECTEXTEND

line level    source

   1          #include<stc12c5a60s2.h>//添加头文件
   2          #include<intrins.h>
   3          #include "IR.h"
   4          #include "time.h"
   5          #include "KEY.h"
   6          #include "delay.h"
   7          #include "ds1302.h"
   8          
   9          
  10          
  11                                                            
  12          uchar code time_set_chinese[72]={0x04,0x44,0x54,0x7F,0x54,0xDC,0x24,0x04,//时间设置  年
  13                                                                          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
  14                                                                          0x00,0x00,0x7F,0x55,0x54,0x7E,0x01,0x00,//月
  15                                                                          0x00,0x00,0x7F,0x49,0x49,0x7F,0x00,0x00,        //日
  16                                                                          0x20,0x7E,0x22,0x28,0x00,0x3E,0x2A,0x3E,//时
  17                                                                          0x10,0x20,0xDF,0x11,0x10,0x9C,0x52,0x21,//分
  18                                                                          0x30,0x04,0xFA,0x31,0x15,0x98,0x7F,0x54, //秒
  19                                                                          0x00, 0x3E, 0x04, 0x08, 0x10, 0x3E, 0x00, 0x00, 
  20                                                                          0x00, 0x20, 0x10, 0x0E, 0x10, 0x20, 0x00, 0x00,
  21          
  22                                                                          };//秒
  23                  
  24          uchar code shi1[80]={   0x00,0xE0,0xA0,0xA0,0xA0,0xE0,0x00,0x00,
  25                                                          0x00,0x40,0x40,0x40,0x40,0x40,0x00,0x00, 
  26                                                          0x00,0xE0,0x80,0xE0,0x20,0xE0,0x00,0x00,
  27                                                          0x00, 0xE0, 0x20, 0xE0, 0x20, 0xE0, 0x00, 0x00, 
  28                                                          0x00, 0x20, 0x20, 0xE0, 0xA0, 0xA0, 0x00, 0x00, 
  29                                                          0x00, 0xE0, 0x20, 0xE0, 0x80, 0xE0, 0x00, 0x00, 
  30                                                          0x00, 0xE0, 0xA0, 0xE0, 0x80, 0xE0, 0x00, 0x00, 
  31                                                          0x00, 0x20, 0x20, 0x20, 0x20, 0xE0, 0x00, 0x00, 
  32                                                          0x00, 0xE0, 0xA0, 0xE0, 0xA0, 0xE0, 0x00, 0x00, 
  33                                                          0x00, 0xE0, 0x20, 0xE0, 0xA0, 0xE0, 0x00, 0x00,
  34                                                  };
  35          
  36          
  37          uchar code shi2[80]={   0x00, 0x0E, 0x0A, 0x0A, 0x0A, 0x0E, 0x00, 0x00, 
  38                                                          0x00, 0x04, 0x04, 0x04, 0x04, 0x04, 0x00, 0x00, 
  39                                                          0x00, 0x0E, 0x08, 0x0E, 0x02, 0x0E, 0x00, 0x00, 
  40                                                          0x00, 0x0E, 0x02, 0x0E, 0x02, 0x0E, 0x00, 0x00, 
  41                                                          0x00, 0x02, 0x02, 0x0E, 0x0A, 0x0A, 0x00, 0x00, 
  42                                                          0x00, 0x0E, 0x02, 0x0E, 0x08, 0x0E, 0x00, 0x00, 
  43                                                          0x00, 0x0E, 0x0A, 0x0E, 0x08, 0x0E, 0x00, 0x00, 
  44                                                          0x00, 0x02, 0x02, 0x02, 0x02, 0x0E, 0x00, 0x00, 
  45                                                          0x00, 0x0E, 0x0A, 0x0E, 0x0A, 0x0E, 0x00, 0x00, 
  46                                                          0x00, 0x0E, 0x02, 0x0E, 0x0A, 0x0E, 0x00, 0x00, 
  47                                                          };      
  48                                                          
  49          uchar code miao1[48]={  0x00, 0xE0, 0xA0, 0xA0, 0xA0, 0xE0, 0x00, 0x00, 
  50                                                          0x00, 0x40, 0x40, 0x40, 0x40, 0x40, 0x00, 0x00, 
  51                                                          0x00, 0xE0, 0x20, 0xE0, 0x80, 0xE0, 0x00, 0x00, 
  52                                                          0x00, 0xE0, 0x20, 0xE0, 0x20, 0xE0, 0x00, 0x00, 
  53                                                          0x00, 0xA0, 0xA0, 0xE0, 0x20, 0x20, 0x00, 0x00, 
  54                                                          0x00, 0xE0, 0x80, 0xE0, 0x20, 0xE0, 0x00, 0x00,  
  55                                                          };                                                                                               
C51 COMPILER V9.00   TIME                                                                  08/19/2014 19:44:31 PAGE 2   

  56          uchar code miao2[80]={                                          
  57                                                          0x00, 0x0E, 0x0A, 0x0A, 0x0A, 0x0E, 0x00, 0x00, 
  58                                                          0x00, 0x04, 0x04, 0x04, 0x04, 0x04, 0x00, 0x00, 
  59                                                          0x00, 0x0E, 0x02, 0x0E, 0x08, 0x0E, 0x00, 0x00, 
  60                                                          0x00, 0x0E, 0x02, 0x0E, 0x02, 0x0E, 0x00, 0x00, 
  61                                                          0x00, 0x0A, 0x0A, 0x0E, 0x02, 0x02, 0x00, 0x00, 
  62                                                          0x00, 0x0E, 0x08, 0x0E, 0x02, 0x0E, 0x00, 0x00, 
  63                                                          0x00, 0x0E, 0x08, 0x0E, 0x0A, 0x0E, 0x00, 0x00, 
  64                                                          0x00, 0x0E, 0x02, 0x02, 0x02, 0x02, 0x00, 0x00,
  65                                                          0x00, 0x0E, 0x0A, 0x0E, 0x0A, 0x0E, 0x00, 0x00, 
  66                                                          0x00, 0x0E, 0x0A, 0x0E, 0x02, 0x0E, 0x00, 0x00, 
  67                                                          }; 
  68          
  69          uchar code fen1[48]={   0x00, 0x70, 0x50, 0x50, 0x50, 0x70, 0x00, 0x00, 
  70                                                          0x00, 0x20, 0x20, 0x20, 0x20, 0x20, 0x00, 0x00, 
  71                                                          0x00, 0x70, 0x40, 0x70, 0x10, 0x70, 0x00, 0x00, 
  72                                                          0x00, 0x70, 0x10, 0x70, 0x10, 0x70, 0x00, 0x00, 
  73                                                          0x00, 0x10, 0x10, 0x70, 0x50, 0x50, 0x00, 0x00, 
  74                                                          0x00, 0x70, 0x10, 0x70, 0x40, 0x70, 0x00, 0x00,   
  75                                                          };                                                                                               
  76          uchar code fen2[80]={                                           
  77                                                          0x00, 0x07, 0x05, 0x05, 0x05, 0x07, 0x00, 0x00, 
  78                                                          0x00, 0x02, 0x02, 0x02, 0x02, 0x02, 0x00, 0x00, 
  79                                                          0x00, 0x07, 0x04, 0x07, 0x01, 0x07, 0x00, 0x00, 
  80                                                          0x00, 0x07, 0x01, 0x07, 0x01, 0x07, 0x00, 0x00, 
  81                                                          0x00, 0x01, 0x01, 0x07, 0x05, 0x05, 0x00, 0x00, 
  82                                                          0x00, 0x07, 0x01, 0x07, 0x04, 0x07, 0x00, 0x00, 
  83                                                          0x00, 0x07, 0x05, 0x07, 0x04, 0x07, 0x00, 0x00, 
  84                                                          0x00, 0x01, 0x01, 0x01, 0x01, 0x07, 0x00, 0x00, 
  85                                                          0x00, 0x07, 0x05, 0x07, 0x05, 0x07, 0x00, 0x00,
  86                                                          0x00, 0x07, 0x01, 0x07, 0x05, 0x07, 0x00, 0x00, 
  87                                                          }; 
  88          
  89          
  90          
  91          
  92          uchar code uln1[8]={0x01,0x02,0x04,0x08,0x10,0x20,0x40,0x80};
  93          
  94          void display_time();
  95          void time();
  96          void display_set(uchar t);
  97          uchar irnum(uchar k,uchar j,uchar l);
  98          void settime();
  99          
 100          
 101          
 102          
 103          void time()
 104          {
 105   1              read_rtc();
 106   1              display_time();
 107   1      }
 108          
 109          
 110          
 111          void settime()
 112          {
 113   1              uchar i,j,k,t=0;
 114   1              k2=0;
 115   1              ircode[2]=0;
 116   1              read_rtc();
 117   1              for(i=0;i<7;i++)
C51 COMPILER V9.00   TIME                                                                  08/19/2014 19:44:31 PAGE 3   

 118   1              {
 119   2                      time_set[i]=now[i];     
 120   2              }
 121   1              while(1)
 122   1              {
 123   2                      
 124   2                      if(t==0)                //年
 125   2                      {
 126   3                              j=time_set[0]%16;
 127   3                              k=time_set[0]/16;
 128   3                              num=k*10+j;
 129   3                              key_num();
 130   3                              ir();
 131   3                              if(ircode[2]==0x07)num--;
 132   3                              if(ircode[2]==0x15)num++;
 133   3                              ircode[2]=0x00;
 134   3                              if(num==255)num=99;
 135   3                              if(num==100)num=0;
 136   3                              j=num%10;
 137   3                              k=num/10;
 138   3                              time_set[0]=k*16+j;     
 139   3                              display_set(0);
 140   3                              ir();
 141   3                              key_2();
 142   3                              if(ircode[2]==0x45)t--;
 143   3                              if(ircode[2]==0x47)t++;
 144   3                              if(k2==1)t++;
 145   3                              k2=0;
 146   3                              if(t==7)t=0;
 147   3                              if(t==255)t=6; 
 148   3                      } 
 149   2                      if(t==1)t++; //周
 150   2                      if(t==2)                 //月
 151   2                      {
 152   3                              j=time_set[2]%16;
 153   3                              k=time_set[2]/16;
 154   3                              num=k*10+j;
 155   3                              key_num();
 156   3                              ir();
 157   3                              if(ircode[2]==0x07)num--;
 158   3                              if(ircode[2]==0x15)num++;
 159   3                              ircode[2]=0x00;
 160   3                              if(num==0)num=12;
 161   3                              if(num==13)num=1;
 162   3                              j=num%10;
 163   3                              k=num/10;
 164   3                              time_set[2]=k*16+j;     
 165   3                              display_set(2);
 166   3                              ir();
 167   3                              key_2();
 168   3                              if(ircode[2]==0x45)t--;
 169   3                              if(ircode[2]==0x47)t++;
 170   3                              if(k2==1)t++;
 171   3                              k2=0;
 172   3                              if(t==7)t=0;
 173   3                              if(t==255)t=6; 
 174   3                      } 
 175   2                      if(t==3)                 //日
 176   2                      {
 177   3                              j=time_set[3]%16;
 178   3                              k=time_set[3]/16;
 179   3                              num=k*10+j;
C51 COMPILER V9.00   TIME                                                                  08/19/2014 19:44:31 PAGE 4   

 180   3                              key_num();
 181   3                              ir();
 182   3                              if(ircode[2]==0x07)num--;
 183   3                              if(ircode[2]==0x15)num++;
 184   3                              ircode[2]=0x00;
 185   3                              if(num==0)num=31;
 186   3                              if(num==32)num=1;
 187   3                              j=num%10;
 188   3                              k=num/10;
 189   3                              time_set[3]=k*16+j;     
 190   3                              display_set(3);
 191   3                              ir();
 192   3                              key_2();
 193   3                              if(ircode[2]==0x45)t--;
 194   3                              if(ircode[2]==0x47)t++;
 195   3                              if(k2==1)t++;
 196   3                              k2=0;
 197   3                              if(t==7)t=0;
 198   3                              if(t==255)t=6; 
 199   3                      } 
 200   2                      if(t==4)                                 //时
 201   2                      {
 202   3                              j=time_set[4]%16;
 203   3                              k=time_set[4]/16;
 204   3                              num=k*10+j;
 205   3                              key_num();
 206   3                              ir();
 207   3                              if(ircode[2]==0x07)num--;
 208   3                              if(ircode[2]==0x15)num++;
 209   3                              ircode[2]=0x00;
 210   3                              if(num==255)num=23;
 211   3                              if(num==24)num=0;
 212   3                              j=num%10;
 213   3                              k=num/10;
 214   3                              time_set[4]=k*16+j;     
 215   3                              display_set(4);
 216   3                              ir();
 217   3                              key_2();
 218   3                              if(ircode[2]==0x45)t--;
 219   3                              if(ircode[2]==0x47)t++;
 220   3                              if(k2==1)t++;
 221   3                              k2=0;
 222   3                              if(t==7)t=0;
 223   3                              if(t==255)t=6; 
 224   3                      } 
 225   2                      if(t==5)                                 //分
 226   2                      {
 227   3                              j=time_set[5]%16;
 228   3                              k=time_set[5]/16;
 229   3                              num=k*10+j;
 230   3                              key_num();
 231   3                              ir();
 232   3                              if(ircode[2]==0x07)num--;
 233   3                              if(ircode[2]==0x15)num++;
 234   3                              ircode[2]=0x00;
 235   3                              if(num==255)num=59;
 236   3                              if(num==60)num=0;
 237   3                              j=num%10;
 238   3                              k=num/10;
 239   3                              time_set[5]=k*16+j;     
 240   3                              display_set(5);
 241   3                              ir();
C51 COMPILER V9.00   TIME                                                                  08/19/2014 19:44:31 PAGE 5   

 242   3                              key_2();
 243   3                              if(ircode[2]==0x45)t--;
 244   3                              if(ircode[2]==0x47)t++;
 245   3                              if(k2==1)t++;
 246   3                              k2=0;
 247   3                              if(t==7)t=0;
 248   3                              if(t==255)t=6; 
 249   3                      } 
 250   2                      if(t==6)                        //       秒
 251   2                      {
 252   3                              j=time_set[6]%16;
 253   3                              k=time_set[6]/16;
 254   3                              num=k*10+j;
 255   3                              key_num();
 256   3                              ir();
 257   3                              if(ircode[2]==0x07)num--;
 258   3                              if(ircode[2]==0x15)num++;
 259   3                              ircode[2]=0x00;
 260   3                              if(num==255)num=59;
 261   3                              if(num==60)num=0;
 262   3                              j=num%10;
 263   3                              k=num/10;
 264   3                              time_set[6]=k*16+j;     
 265   3                              display_set(6);
 266   3                              ir();
 267   3                              key_2();
 268   3                              if(ircode[2]==0x45)t--;
 269   3                              if(ircode[2]==0x47)t++;
 270   3                              if(k2==1)
 271   3                              {
 272   4                                      k2=0;
 273   4                                      num=7;
 274   4                                      for(;num<10;)
 275   4                                      {
 276   5                                              t=8*num;
 277   5                                              for(i=0;i<8;i++)
 278   5                                              {
 279   6                                              P1=0x80;
 280   6                                              P2=uln1[i];
 281   6                                              P0=time_set_chinese[t];
 282   6                                              t++;
 283   6                                              }
 284   5                                              delay50us(30);
 285   5                                              P2=0xff;
 286   5                                              P0=0x00;
 287   5                                              P1=0x00;
 288   5                                              key_num();
 289   5                                              if(num==9)num=7;
 290   5                                              key_2();
 291   5                                              if(k2==1)
 292   5                                              {
 293   6                                              if(num==8)set_rtc();
 294   6                                              num=11;
 295   6                                              }
 296   5                                              
 297   5                                      }
 298   4                                      break;
 299   4                                      
 300   4      
 301   4                              }
 302   3                              if(t==7)t=0;
 303   3                              if(t==255)t=6; 
C51 COMPILER V9.00   TIME                                                                  08/19/2014 19:44:31 PAGE 6   

 304   3                      } 
 305   2                      key_2();
 306   2                      if(k2==1)break;
 307   2                      ir();
 308   2                      if(ircode[2]==0x0d)
 309   2                      {
 310   3                      set_rtc();
 311   3                      break;
 312   3                      }
 313   2                      if(ircode[2]==0x46)
 314   2                      {
 315   3                      ircode[2]=0x00;
 316   3                      break;
 317   3                      }
 318   2              }
 319   1      }
 320          
 321          
 322          
 323          
 324                  
 325          
 326          
 327          
 328          
 329          
 330          
 331          void display_set(uchar t)
 332          {
 333   1                              uchar i,js,ks,k;
 334   1                      
 335   1                              js=time_set[t]%16;
 336   1                              ks=time_set[t]/16;
 337   1                      
 338   1                              js=js*8;
 339   1                              ks=ks*8;
 340   1                              k=t*8;
 341   1                              for(i=0;i<7;i++)
 342   1                                      {
 343   2                                              P2=0xff;
 344   2                                              P0=0x00;
 345   2                                              _nop_();        _nop_();        _nop_();        _nop_();
 346   2                                              P1=uln1[i];
 347   2                                              P2=shi1[ks]|shi2[js];
 348   2                                              P0=0x01; _nop_();       _nop_();        _nop_();        _nop_();
 349   2                                              ks++;
 350   2                                              js++;
 351   2                                              P2=0x00;
 352   2                                              delay50us(30);
 353   2                                              P2=0xff;
 354   2                                              P0=0x00;
 355   2                                              P2=0x00;        _nop_();        _nop_();
 356   2                                      }
 357   1                              for(i=0;i<8;i++)
 358   1                                      {
 359   2                                      P1=0x80;
 360   2                                      P2=uln1[i];
 361   2                                      P0=time_set_chinese[k];
 362   2                                      k++;
 363   2                                      }
 364   1                                      delay50us(30);
 365   1                                      P2=0xff;
C51 COMPILER V9.00   TIME                                                                  08/19/2014 19:44:31 PAGE 7   

 366   1                                      P0=0x00;
 367   1                                      P1=0x00;        
 368   1      }
 369          
 370          void display_time()
 371          {
 372   1              uchar i,j,js,ks,jf,kf,jm,km;
 373   1              
 374   1              for(j=0;j<8;j++)
 375   1              {
 376   2                      key_mod();
 377   2                      ir();
 378   2                      if(ircode[2]==0x43)
 379   2                      {
 380   3                      ircode[2]=0x00;
 381   3                      P4=0x00;
 382   3                      ET1=0;
 383   3                      delayms(100);
 384   3                      PCON=0X02;
 385   3                      _nop_();
 386   3                      _nop_();
 387   3                      _nop_();
 388   3                      _nop_();
 389   3                      _nop_();
 390   3                      _nop_();_nop_();_nop_();_nop_();
 391   3                      delayms(100);
 392   3                      P4=0xff;
 393   3                      ET1=1;  
 394   3                      }
 395   2                      if(ircode[2]==0x09)
 396   2                      {
 397   3                      ircode[2]=0x00;
 398   3                      mod++;
 399   3                      }
 400   2                      if(mod==2)mod=0;
 401   2                      if(mod==0)
 402   2                      {
 403   3                              js=now[4]%16;
 404   3                              ks=now[4]/16;
 405   3                              jf=now[5]%16;
 406   3                              kf=now[5]/16;
 407   3                              jm=now[6]%16;
 408   3                              km=now[6]/16;
 409   3                              js=js*8;
 410   3                              ks=ks*8;
 411   3                              jf=jf*8;
 412   3                              kf=kf*8;
 413   3                              jm=jm*8;
 414   3                              km=km*8;
 415   3                              for(i=0;i<7;i++)
 416   3                                      {
 417   4                                              P2=0xff;
 418   4                                              P0=0x00;
 419   4                                              P2=0x00;_nop_();        _nop_();        _nop_();        _nop_();
 420   4                                              P1=uln1[i];
 421   4                                              P2=fen1[kf]|fen2[jf];
 422   4                                              P0=0x01;_nop_();        _nop_();        _nop_();        _nop_();
 423   4                                              _nop_();        _nop_();        _nop_();        _nop_();
 424   4                                              kf++;
 425   4                                              jf++;
 426   4                                              P2=0x80; _nop_();       _nop_();        _nop_();        _nop_();
 427   4                                              P0=shi1[ks]|shi2[js];
C51 COMPILER V9.00   TIME                                                                  08/19/2014 19:44:31 PAGE 8   

 428   4                                              ks++;
 429   4                                              js++;
 430   4                                              P2=0x00;
 431   4                                              delay50us(30);
 432   4                                              P2=0xff;
 433   4                                              P0=0x00;
 434   4                                              P2=0x00;        _nop_();        _nop_();
 435   4                                      }
 436   3                              for(i=0;i<8;i++)
 437   3                                      {
 438   4                                      P1=0x80;
 439   4                                      P2=uln1[i];
 440   4                                      P0=miao1[km]|miao2[jm];
 441   4                                      jm++;
 442   4                                      km++;  
 443   4                                      }
 444   3                                      delay50us(30);
 445   3                                      P1=0x00;
 446   3                      }
 447   2                      if(mod==1)
 448   2                      {
 449   3                              js=now[2]%16;
 450   3                              ks=now[2]/16;
 451   3                              jf=now[3]%16;
 452   3                              kf=now[3]/16;
 453   3                              jm=now[0]%16;
 454   3                              km=now[0]/16;
 455   3                              js=js*8;
 456   3                              ks=ks*8;
 457   3                              jf=jf*8;
 458   3                              kf=kf*8;
 459   3                              jm=jm*8;
 460   3                              km=km*8;
 461   3                              for(i=0;i<7;i++)
 462   3                                      {
 463   4                                              P2=0xff;
 464   4                                              P0=0x00;
 465   4                                              P2=0x00;_nop_();        _nop_();        _nop_();        _nop_();
 466   4                                              P1=uln1[i];
 467   4                                              P2=fen1[kf]|fen2[jf];
 468   4                                              P0=0x01;_nop_();        _nop_();        _nop_();        _nop_();
 469   4                                              _nop_();        _nop_();        _nop_();        _nop_();
 470   4                                              kf++;
 471   4                                              jf++;
 472   4                                              P2=0x80; _nop_();       _nop_();        _nop_();        _nop_();
 473   4                                              P0=shi1[ks]|shi2[js];
 474   4                                              ks++;
 475   4                                              js++;
 476   4                                              P2=0x00;
 477   4                                              delay50us(30);
 478   4                                              P2=0xff;
 479   4                                              P0=0x00;
 480   4                                              P2=0x00;        _nop_();        _nop_();
 481   4                                      }
 482   3                              for(i=0;i<8;i++)
 483   3                                      {
 484   4                                      P1=0x80;
 485   4                                      P2=uln1[i];
 486   4                                      P0=miao1[km]|miao2[jm];
 487   4                                      jm++;
 488   4                                      km++;  
 489   4                                      }
C51 COMPILER V9.00   TIME                                                                  08/19/2014 19:44:31 PAGE 9   

 490   3                                      delay50us(30);
 491   3                                      P1=0x00;
 492   3                      }
 493   2              }
 494   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =   1776    ----
   CONSTANT SIZE    =    496    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----      16
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
